defaults:
  key: by_target_name
  num_cores: 6
  num_runs: 6
  problem: SimpleGaussian
  remove_nonce: false
  verbose: true
  wandb_project: by_problem_name
experiments:
- N: 2000
  target: test_smcIntegrator.py
- N: 200
  NITN: 10
  target: test_vegasIntegrator.py
- N: 2000
  P: 2
  integral: midpointIntegral
  split: kdSplit
  target: test_simpleIntegrator.py
- N: 1000
  P: 2
  integral: smcIntegral
  num_extra_samples: 2
  split: kdSplit
  target: test_simpleIntegrator.py
- N: 200
  P: 2
  integral: smcIntegral
  num_extra_samples: 10
  split: kdSplit
  target: test_simpleIntegrator.py
- N: 1000
  P: 2
  integral: smcIntegral
  num_extra_samples: 2
  split: minSseSplit
  target: test_simpleIntegrator.py
- N: 200
  P: 2
  integral: smcIntegral
  num_extra_samples: 10
  split: minSseSplit
  target: test_simpleIntegrator.py
- N: 500
  active_N: 5
  base_N: 375
  integral: smcIntegral
  num_extra_samples: 4
  queue: PriorityQueue
  split: kdSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: yvar
- N: 500
  active_N: 5
  base_N: 375
  integral: smcIntegral
  num_extra_samples: 4
  queue: PriorityQueue
  split: kdSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: range
- N: 500
  active_N: 5
  base_N: 375
  integral: smcIntegral
  num_extra_samples: 4
  queue: PriorityQueue
  split: kdSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: volume
- N: 100
  active_N: 5
  base_N: 75
  integral: smcIntegral
  num_extra_samples: 20
  queue: PriorityQueue
  split: kdSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: yvar
- N: 100
  active_N: 5
  base_N: 75
  integral: smcIntegral
  num_extra_samples: 20
  queue: PriorityQueue
  split: kdSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: range
- N: 100
  active_N: 5
  base_N: 75
  integral: smcIntegral
  num_extra_samples: 20
  queue: PriorityQueue
  split: kdSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: volume
- N: 500
  active_N: 5
  base_N: 375
  integral: smcIntegral
  num_extra_samples: 4
  queue: PriorityQueue
  split: minSseSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: yvar
- N: 500
  active_N: 5
  base_N: 375
  integral: smcIntegral
  num_extra_samples: 4
  queue: PriorityQueue
  split: minSseSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: range
- N: 500
  active_N: 5
  base_N: 375
  integral: smcIntegral
  num_extra_samples: 4
  queue: PriorityQueue
  split: minSseSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: volume
- N: 100
  active_N: 5
  base_N: 75
  integral: smcIntegral
  num_extra_samples: 20
  queue: PriorityQueue
  split: minSseSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: yvar
- N: 100
  active_N: 5
  base_N: 75
  integral: smcIntegral
  num_extra_samples: 20
  queue: PriorityQueue
  split: minSseSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: range
- N: 100
  active_N: 5
  base_N: 75
  integral: smcIntegral
  num_extra_samples: 20
  queue: PriorityQueue
  split: minSseSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: volume
- N: 500
  active_N: 5
  base_N: 50
  integral: smcIntegral
  num_extra_samples: 4
  queue: PriorityQueue
  split: kdSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: yvar
- N: 500
  active_N: 5
  base_N: 50
  integral: smcIntegral
  num_extra_samples: 4
  queue: PriorityQueue
  split: kdSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: range
- N: 500
  active_N: 5
  base_N: 50
  integral: smcIntegral
  num_extra_samples: 4
  queue: PriorityQueue
  split: kdSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: volume
- N: 100
  active_N: 5
  base_N: 10
  integral: smcIntegral
  num_extra_samples: 20
  queue: PriorityQueue
  split: kdSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: yvar
- N: 100
  active_N: 5
  base_N: 10
  integral: smcIntegral
  num_extra_samples: 20
  queue: PriorityQueue
  split: kdSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: range
- N: 100
  active_N: 5
  base_N: 10
  integral: smcIntegral
  num_extra_samples: 20
  queue: PriorityQueue
  split: kdSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: volume
- N: 500
  active_N: 5
  base_N: 50
  integral: smcIntegral
  num_extra_samples: 4
  queue: PriorityQueue
  split: minSseSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: yvar
- N: 500
  active_N: 5
  base_N: 50
  integral: smcIntegral
  num_extra_samples: 4
  queue: PriorityQueue
  split: minSseSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: range
- N: 500
  active_N: 5
  base_N: 50
  integral: smcIntegral
  num_extra_samples: 4
  queue: PriorityQueue
  split: minSseSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: volume
- N: 100
  active_N: 5
  base_N: 10
  integral: smcIntegral
  num_extra_samples: 20
  queue: PriorityQueue
  split: minSseSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: yvar
- N: 100
  active_N: 5
  base_N: 10
  integral: smcIntegral
  num_extra_samples: 20
  queue: PriorityQueue
  split: minSseSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: range
- N: 100
  active_N: 5
  base_N: 10
  integral: smcIntegral
  num_extra_samples: 20
  queue: PriorityQueue
  split: minSseSplit
  target: test_limitedSampleIntegrator.py
  weighting_function: volume
